{% import "net/url" %}

{% import "github.com/bakape/hydron/common" %}
{% import "github.com/bakape/hydron/files" %}

{% func Thumbnail(img common.CompactImage, page common.Page, highlight bool) %}{% stripspace %}
	<figure data-href="{%s= files.NetSourcePath(img.SHA1, img.Type) %}"{% if highlight %}{% space %}class="highlight"{% endif %}>
		<input type="checkbox" name="img:{%s= img.SHA1 %}">
		<div class="background"></div>
		<a href="/image/{%s= img.SHA1 %}?{%s= page.Query() %}">
			<img width="{%d int(img.Thumb.Width) %}" height="{%d int(img.Thumb.Height) %}" src="{%s= files.NetThumbPath(img.SHA1) %}">
		</a>
	</figure>
{% endstripspace %}{% endfunc %}

{% func ImagePage(img common.Image, page common.Page) %}{% stripspace %}
	{% code title := img.Name %}
	{% if title == "" %}
		{% code title = "hydron" %}
	{% endif %}
	{%= head(title) %}
	<body>
		<div id="image-view">
			<section id="tags">
				{% if img.Name != "" %}
					<span class="image-name">
						<a href="/search?q={%s url.QueryEscape("name:") + img.Name %}" title="Search for name">
							Name:{% space %}{%s img.Name %}
						</a>
					</span>
				{% endif %}
				{% code org := organizeTags(img.Tags) %}
				{%= renderTags(org[common.Character], page) %}
				{%= renderTags(org[common.Series], page) %}
				{%= renderTags(org[common.Author], page) %}
				{%= renderTags(org[common.Rating], page) %}
				{%= renderTags(org[common.Meta], page) %}
				{%= renderTags(org[common.Undefined], page) %}
			</section>
			<div id="media-container">
				{% code src := files.NetSourcePath(img.SHA1, img.Type) %}
				{% switch common.GetMediaType(img.Type) %}
				{% case common.MediaImage %}
					<img src="{%s= src %}">
				{% case common.MediaVideo %}
					<video src="{%s= src %}" autoplay loop controls>
				{% default %}
					<b>Display not supported for this file format</b>
				{% endswitch %}
			</div>
		</div>
	</body>
{% endstripspace %}{% endfunc %}

Render tag adition and direct tag query links
{% func renderTags(tags []common.Tag, page common.Page) %}{% stripspace %}
	{% code page.Page = 0 %}
	{% code init := page.Filters %}
	{% for _, t  := range tags %}
		{% code page.Filters = init %}
		{% code filter := common.TagFilter{ TagBase: t.TagBase } %}
		{% code page.Filters.Tag = append(page.Filters.Tag, filter) %}
		<span class="spaced tag-{%z= common.BufferWriter(t.Type) %}">
			<a href="{%s= page.URL() %}" class="char-button" title="Add to search">
				+
			</a>
			{% code page.Filters.Tag[len(page.Filters.Tag)-1].Negative = true %}
			<a href="{%s= page.URL() %}" class="char-button" title="Remove from search">
				-
			</a>
			{% code page.Filters = common.FilterSet{
				Tag: []common.TagFilter{filter},
			} %}
			<a href="{%s= page.URL() %}" title="Search for{% space %}{%s t.Tag %}">
				{% if t.Type == common.Rating %}
					rating:{% space %}
				{% endif %}
				{%s t.Tag %}
			</a>
		</span>
	{% endfor %}
{% endstripspace %}{% endfunc %}
