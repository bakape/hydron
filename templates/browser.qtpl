{% import "github.com/bakape/hydron/common" %}
{% import "strconv" %}

{% func Browser(page common.Page, imgs []common.CompactImage) %}{% stripspace %}
	{% code filters := page.Filters.String() %}
	{% code title := filters %}
	{% if title == "" %}
		{% code title = "hydron" %}
	{% endif %}
	{%= head(title) %}
	<body>
		<nav id="top-banner">
			<div style="display: flex;">
				<form method="get">
					<input type="search" id="search" placeholder="Search" value="{%s filters %}" name="q" autocomplete="off" list="search-suggestions">
					<script>
						var el = document.getElementById("search");
						el.selectionStart = el.selectionEnd = el.value.length;
					</script>
					<datalist id="search-suggestions"></datalist>
					<select name="order" tabindex="-1" title="Order by">
						{% for i := common.None; i <= common.Random; i++ %}
							<option value="{%d int(i) %}"{% if i == page.Order.Type %}{% space %}selected{% endif %}>
								{%s= orderLabels[int(i)] %}
							</option>
						{% endfor %}
					</select>
					<input type="checkbox" name="reverse" tabindex="-1" title="Reverse order"{% if page.Order.Reverse %}{% space %}checked{% endif %}>
				</form>
				<div id="options">
					<label style="padding-bottom: 1em;">Options</label>
					<div id="opts-bar">
						<input type="text" id="opts-input" title="Text input for options" autocomplete="off">
						<br>
						<select id="opts-select">
							{% for i := common.FetchTags; i <= common.Delete; i++ %}
								<option value="{%d int(i) %}">
									{%s= optionLabels[int(i)] %}
								</option>
							{% endfor %}
						</select>
						<br>
						<input type="button" id="opts-submit" value="Submit">
						<br>
						<hr>
						<a href="/import">Upload files</a>
						<br>
						<a href="help">Help</a>
					</div>
				</div>
				{%= pagination(page) %}
			</div>
			<div style="width: 100%; height: 0.3em;">
				<div id="progress-bar"></div>
			</div>
		</nav>
		<section id="browser" tabindex="1">
			{% for i, img := range imgs %}
				{%= Thumbnail(img, page, i == 0) %}
			{% endfor %}
		</section>
		<script src="/assets/main.js" async></script>
	</body>
{% endstripspace %}{% endfunc %}

Links to different pages on a search page
{% func pagination(page common.Page) %}{% stripspace %}
	<span id="page-links" class="spaced">
		{% code current := int(page.Page) %}
		{% code total := int(page.PageTotal) %}
		{% if current != 0 %}
			{% if current-1 != 0 %}
				{%= pageLink(page, 0, "<<") %}
			{% endif %}
			{%= pageLink(page, current-1, "<") %}
		{% endif %}
		{% code count := 0 %}
		{% for i := current-5; i < total && count < 10; i++ %}
			{% if i < 0 %}
				{% continue %}
			{% endif %}
			{% code count++ %}
			{% if i != current %}
				{%= pageLink(page, i, strconv.Itoa(i+1)) %}
			{% else %}
				<b>{%d i+1 %}</b>
			{% endif %}
		{% endfor %}
		{% if current != total-1 %}
			{%= pageLink(page, current+1, ">") %}
			{% if current+1 != total-1 %}
				{%= pageLink(page, total-1, ">>") %}
			{% endif %}
		{% endif %}
	</span>
{% endstripspace %}{% endfunc %}

Link to a different paginated search page
{% func pageLink(page common.Page, i int, text string) %}{% stripspace %}
	{% code page.Page = uint(i)  %}
	<a href="{%s= page.URL() %}" tabindex="2">
		{%s= text %}
	</a>
{% endstripspace %}{% endfunc %}
